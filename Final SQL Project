# For this project, I downloaded Chinook data from https://www.sqlitetutorial.net/sqlite-sample-database/
# Then I added the database onto SQLiteStudio 
# Finally, I performed analytics on the data using SQL

# Here are potential answers to the example questions in the final SQL project. 
# Note that there are often multiple ways to write SQL to come up with the same answer. 


/* Show Customers (their full names, customer ID, and country) who are not in the US */
SELECT
FirstName,
LastName,
CustomerId,
Country
FROM chinook.customers
WHERE Country <> 'USA';

/*Show only the Customers from Brazil. */
SELECT
*
FROM chinook.customers
WHERE Country = 'Brazil';

/* Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country */
SELECT
c.FirstName,
c.LastName,
i.InvoiceId,
i.InvoiceDate,
i.BillingCountry
FROM chinook.customers c
LEFT JOIN chinook.invoices i ON c.CustomerId = i.CustomerID
WHERE i.BillingCountry = 'Brazil';

/* Show the Employees who are Sales Agents */
SELECT
*
FROM chinook.employees
WHERE Title LIKE '%Sales%Agent%';

/* Find a unique/distinct list of billing countries from the Invoice table */
SELECT DISTINCT
BillingCountry
FROM chinook.invoices
ORDER BY BillingCountry;

/* Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name */
SELECT DISTINCT
e.FirstName,
e.LastName,
e.Title,
i.InvoiceID
FROM chinook.customers c
LEFT JOIN chinook.employees e ON c.SupportRepID = e.EmployeeId
LEFT JOIN chinook.invoices i ON c.CustomerId = i.CustomerID
WHERE e.Title LIKE '%Sales%';

/* Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers */
SELECT
e.FirstName AS EmployeeFirstName,
e.LastName AS EmployeeLastName,
c.FirstName AS CustFirstName,
c.LastName AS CustLastName,
c.Country,
i.total
FROM chinook.customers c
LEFT JOIN chinook.employees e ON c.SupportRepId = e.EmployeeId
LEFT JOIN chinook.invoices i ON c.CustomerId = i.CustomerID;

/* How many Invoices were there in 2009? */
SELECT
COUNT(InvoiceID) AS TotalNumInvoice
FROM chinook.invoices
WHERE InvoiceDate LIKE '%2009%';

/* What are the total sales for 2009? */
SELECT
SUM(Total) AS TotalInvoice
FROM chinook.invoices
WHERE InvoiceDate LIKE '%2009%';

/* Write a query that includes the purchased track name with each invoice line ID */
SELECT
ii.InvoiceLineId,
t.Name
FROM chinook.invoice_items ii
LEFT JOIN chinook.tracks t ON ii.TrackId = t.TrackID
ORDER BY ii.InvoiceLineId;

/* Write a query that includes the purchased track name AND artist name with each invoice line  ID */
SELECT
ii.InvoiceLineId,
t.Name AS TrackName,
ar.Name AS ArtistName
FROM chinook.invoice_items ii
LEFT JOIN chinook.tracks t ON ii.TrackId = t.TrackId
LEFT JOIN chinook.albums al ON t.AlbumId = al.AlbumId
LEFT JOIN chinook.artists ar ON  al.ArtistId = ar.ArtistId
ORDER BY ii.InvoiceLineId;

/* Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre */
SELECT
t.name,
al.Title AS AlbumName,
m.Name AS MediaType,
g.Name AS Genre
FROM chinook.tracks t
LEFT JOIN chinook.albums al ON t.AlbumId = al.AlbumId
LEFT JOIN chinook.media_types m ON t.MediaTypeId = m.MediaTypeId
LEFT JOIN chinook.Genres g ON t.GenreId = g.GenreId; 

/* Show the total sales made by each sales agent */
SELECT DISTINCT
e.FirstName,
e.LastName,
e.Title,
ROUND(SUM(i.Total),2) AS TotalSales
FROM chinook.employees e
LEFT JOIN chinook.customers c ON e.EmployeeId = c.SupportRepId
INNER JOIN chinook.invoices i ON i.CustomerId = c.CustomerId
WHERE Title LIKE '%Sales%'
GROUP BY
e.FirstName,
e.LastName,
e.Title
ORDER BY TotalSales DESC;

/* Which sales agent made the most dollars in sales in 2009? */
SELECT
e.FirstName,
e.LastName,
e.Title,
ROUND(SUM(i.Total),2) AS TotalSales
FROM chinook.employees e
LEFT JOIN chinook.customers c ON e.EmployeeId = c.SupportRepId
LEFT JOIN chinook.invoices i ON i.CustomerId = c.CustomerId
WHERE e.title LIKE '%Sales%Agent%'
AND i.InvoiceDate LIKE '%2009%'
GROUP BY
e.FirstName
ORDER BY ROUND(SUM(i.Total),2) DESC
LIMIT 1;




